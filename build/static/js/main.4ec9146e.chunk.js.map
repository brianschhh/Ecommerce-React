{"version":3,"sources":["CartContex.js","components/Header/Header.js","components/icon/icon.js","components/DarkMode/DarkMode.js","components/Nav/Nav.js","components/Spinner/Spinner.js","Firebase.js","views/Electronics/Electronics.js","components/Item/Item.js","components/ItemList/ItemList.js","views/Home/Home.js","views/Jewelery/Jewelery.js","views/MenCloth/MenCloth.js","views/WomenCloth/WomenCloth.js","components/Counter/Counter.js","views/ItemDetail/ItemDetail.js","components/Error/Error.js","components/Form/Form.js","views/Cart/Cart.js","App.js","index.js"],"names":["CartContext","createContext","useCartContext","useContext","CartProvider","children","defaultCart","useState","cart","setCart","cantItems","setcantItems","isDarkMode","setIsDarkMode","Provider","value","changeState","addItem","item","qnt","length","aux","findIndex","obj","id","newCart","cantidad","removeItem","itemID","filter","clearCart","Header","className","Icon","to","icon","faShoppingCart","DarkMode","myContext","useEffect","onChange","checked","size","Nav","Button","inverted","color","style","marginTop","Spinner","Dimmer","active","Loader","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Electronics","electro","setElectro","isLoading","setIsLoading","docs","collection","get","then","querySnapshot","forEach","doc","push","data","category","filteredItem","x","backgroundColor","map","el","Card","height","width","Image","src","image","wrapped","centered","Content","title","Meta","price","Item","ItemList","setItem","it","Home","Jewelery","jewel","setJewel","jel","jew","MenCloth","mencloth","setMencloth","mc","WomenCloth","womencloth","setWomencloth","wc","Counter","min","max","parseInt","counter","setCounter","onAdd","counterUp","counterDown","disabled","onClick","ItemDetail","match","params","items","setItems","boxShadow","Description","description","Error","FormCart","initialState","firstName","lastName","Email","values","setValues","order","setOrder","addOrEdit","object","a","set","car","alert","console","log","handleOnChange","e","target","name","product","handleOnSubmit","Form","onSubmit","Field","placeholder","control","Input","label","type","Cart","Total","alt","cursor","faTimesCircle","toFixed","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+fAEaA,EAAcC,0BAEdC,EAAiB,kBAAMC,qBAAWH,IAElCI,EAAe,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAiC,IAAvBC,mBAAuB,MAAT,GAAS,EAC9D,EAAwBC,mBAASD,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,kBAAM,KAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KA6BA,OACE,cAACb,EAAYc,SAAb,CACEC,MAAO,CACLP,OACAE,YACAE,aACAI,YAVN,SAAqBJ,GACnBC,EAAcD,IAUVK,QAlCN,SAAiBC,EAAMC,GACrB,GAAoB,IAAhBX,EAAKY,OAAc,CACrB,IAAIC,EAAMb,EAAKc,WAAU,SAACC,GACxB,OAAOA,EAAIL,KAAKM,KAAON,EAAKA,KAAKM,MAEnC,IAAa,IAATH,EAAY,CACd,IAAMI,EAAUjB,EAChBiB,EAAQJ,GAAKK,SAAWD,EAAQJ,GAAKK,SAAWR,EAAKQ,cAChDjB,EAAQ,GAAD,mBAAKD,GAAL,CAAWU,UACpBT,EAAQ,GAAD,mBAAKD,GAAL,CAAWU,KACzBP,EAAaO,EAAKQ,SAAWhB,IAyBzBiB,WAtBN,SAAoBC,EAAQT,GAC1BV,EAAQD,EAAKqB,QAAO,SAACN,GAAD,OAASA,EAAIL,KAAKM,KAAOI,MAC7CjB,EAAaD,EAAYS,IAqBrBW,UAlBN,WACErB,EAAQH,GACRK,EAAa,KAQb,SAWGN,K,OCvCQ0B,MARf,WACE,OACE,qBAAKC,UAAU,oBAAf,SACE,+C,iDCeSC,MAff,WACE,IAAQvB,EAAcR,IAAdQ,UAER,OACE,sBAAKsB,UAAU,aAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,QAAlC,SACE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,qBAAKJ,UAAU,oBAAf,SACE,qCAAQtB,W,kBCID2B,MAff,WACE,IAAMC,EAAYnC,qBAAWH,GAC7B,EAAoCO,oBAAS,kBAAM,KAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KAQA,OAJA0B,qBAAU,WAFRD,EAAUtB,YAAYJ,MAOtB,cAAC,IAAD,CAAgB4B,SAAU3B,EAAe4B,QAAS7B,EAAY8B,KAAM,MCqCzDC,MA7Cf,WACE,IAAQjC,EAAcR,IAAdQ,UACR,OACE,sBAAKsB,UAAU,iBAAf,UACE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAACU,EAAA,EAAD,CACEF,KAAK,SACLG,UAAQ,EACRC,MAAM,QACNC,MAAO,CAAEC,UAAW,OAJtB,oBASF,qBAAKhB,UAAU,kBAAf,SACE,cAAC,EAAD,MAEF,+BACE,uBACA,6BACE,cAAC,IAAD,CAAMA,UAAU,cAAcE,GAAG,eAAjC,0BAIF,6BACE,cAAC,IAAD,CAAMF,UAAU,cAAcE,GAAG,YAAjC,wBAIF,6BACE,cAAC,IAAD,CAAMF,UAAU,cAAcE,GAAG,YAAjC,yBAIF,6BACE,cAAC,IAAD,CAAMF,UAAU,cAAcE,GAAG,cAAjC,8BAKW,IAAdxB,EAAkB,cAAC,EAAD,IAAW,S,qDClCrBuC,MAVf,WACE,OACE,8BACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,2B,SCSKC,G,OAFFC,IAASC,cAXC,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAOYC,aCkGNC,MA1Gf,WACE,IAAQnD,EAAeV,IAAfU,WACR,EAA8BL,mBAAS,IAAvC,mBAAOyD,EAAP,KAAgBC,EAAhB,KACA,EAAkC1D,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KAoBA,OAlBA5B,qBAAU,WACR,IAAM6B,EAAO,GAEbf,EAAGgB,WAAW,SACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBN,EAAKO,KAAL,2BACKD,EAAIE,QADT,IAEEpD,GAAIkD,EAAIlD,GACRqD,SAAUH,EAAIE,OAAOC,YAEvB,IAAMC,EAAeV,EAAKvC,QAAO,SAACkD,GAAD,MAAsB,eAAfA,EAAEF,YAC1CZ,EAAWa,MAEbX,GAAa,QAEhB,IAED,8BACGvD,EACC,qBACEmC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,sBAFZ,SAIE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BF,EAAQiB,KAAI,SAACC,GACZ,OACE,qBAAKlD,UAAU,wBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBACEtC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,iBAFZ,SAIE,cAACsD,EAAA,EAAD,CAAOC,IAAKL,EAAGM,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAErD,eAACP,EAAA,EAAKQ,QAAN,CAAc5C,MAAO,CAAEiC,gBAAiB,SAAxC,UACE,cAACG,EAAA,EAAKpD,OAAN,CACEgB,MAAO,CAAEiC,gBAAiB,QAASlC,MAAO,SAD5C,SAGGoC,EAAGU,QAEN,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACE,sBAAMe,MAAO,CAAED,MAAO,SAAtB,kBACCoC,EAAGY,WAGR,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAagD,EAAG1D,IAAxB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAtBkCoC,EAAG1D,YAmCvD,qBAAKQ,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BF,EAAQiB,KAAI,SAACC,GACZ,OACE,qBAAKlD,UAAU,kBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBAAKrD,UAAU,iBAAf,SACE,cAACsD,EAAA,EAAD,CAAOC,IAAKL,EAAGM,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAErD,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKpD,OAAN,UAAcmD,EAAGU,QACjB,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMA,UAAU,OAAhB,UACE,wCACCkD,EAAGY,WAGR,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAagD,EAAG1D,IAAxB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAf4BoC,EAAG1D,e,cCd1CuE,MA9Df,YAAyB,IAAT7E,EAAQ,EAARA,KACNN,EAAeV,IAAfU,WACR,OACE,8BACGA,EACC,qBAAKoB,UAAU,wBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBACEtC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,iBAFZ,SAIE,cAACsD,EAAA,EAAD,CAAOC,IAAKrE,EAAKsE,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAEvD,eAACP,EAAA,EAAKQ,QAAN,CAAc5C,MAAO,CAAEiC,gBAAiB,SAAxC,UACE,cAACG,EAAA,EAAKpD,OAAN,CAAagB,MAAO,CAAEiC,gBAAiB,QAASlC,MAAO,SAAvD,SACG5B,EAAK0E,QAER,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACE,sBAAMe,MAAO,CAAED,MAAO,SAAtB,kBACC5B,EAAK4E,WAGV,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAahB,EAAKM,IAA1B,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,iCASV,qBAAKd,UAAU,kBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBAAKrD,UAAU,iBAAf,SACE,cAACsD,EAAA,EAAD,CAAOC,IAAKrE,EAAKsE,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAEvD,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKpD,OAAN,UAAcb,EAAK0E,QACnB,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMA,UAAU,OAAhB,UACE,wCACCd,EAAK4E,WAGV,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAahB,EAAKM,IAA1B,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,oCCpBHkD,MA7Bf,WACE,MAAwBzF,mBAAS,IAAjC,mBAAOW,EAAP,KAAa+E,EAAb,KACA,EAAkC1F,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KAeA,OAbA5B,qBAAU,WACR,IAAM6B,EAAO,GACbf,EAAGgB,WAAW,SACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBN,EAAKO,KAAL,2BAAeD,EAAIE,QAAnB,IAA2BpD,GAAIkD,EAAIlD,SAErCyE,EAAQ7B,GACRD,GAAa,QAEhB,IAGD,qBAAKnC,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BhD,EAAK+D,KAAI,SAACiB,GACT,OAAO,cAAC,EAAD,CAAMhF,KAAMgF,GAASA,EAAG1E,aCN1B2E,MAlBf,WACE,IAAQvF,EAAeV,IAAfU,WAER,OACE,8BACGA,EACC,qBAAKmC,MAAO,CAAEiC,gBAAiB,SAA/B,SACE,cAAC,EAAD,MAGF,8BACE,cAAC,EAAD,S,OCoGKoB,MA3Gf,WACE,IAAQxF,EAAeV,IAAfU,WACR,EAA0BL,mBAAS,IAAnC,mBAAO8F,EAAP,KAAcC,EAAd,KACA,EAAkC/F,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KAqBA,OAnBA5B,qBAAU,WACR,IAAM6B,EAAO,GAEbf,EAAGgB,WAAW,SACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBN,EAAKO,KAAL,2BACKD,EAAIE,QADT,IAEEpD,GAAIkD,EAAIlD,GACRqD,SAAUH,EAAIE,OAAOC,YAEvB,IAAMC,EAAeV,EAAKvC,QAAO,SAACkD,GAAD,MAAsB,aAAfA,EAAEF,YAC1CyB,EAASxB,MAEXX,GAAa,QAEhB,IAGD,8BACGvD,EACC,qBACEmC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,sBAFZ,SAIE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BmC,EAAMpB,KAAI,SAACsB,GACV,OACE,qBAAKvE,UAAU,wBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBACEtC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,iBAFZ,SAIE,cAACsD,EAAA,EAAD,CAAOC,IAAKgB,EAAIf,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAEtD,eAACP,EAAA,EAAKQ,QAAN,CAAc5C,MAAO,CAAEiC,gBAAiB,SAAxC,UACE,cAACG,EAAA,EAAKpD,OAAN,CACEgB,MAAO,CAAEiC,gBAAiB,QAASlC,MAAO,SAD5C,SAGGyD,EAAIX,QAEP,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACE,sBAAMe,MAAO,CAAED,MAAO,SAAtB,kBACCyD,EAAIT,WAGT,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAaqE,EAAI/E,IAAzB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAtBkCyD,EAAI/E,YAmCxD,qBAAKQ,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BmC,EAAMpB,KAAI,SAACuB,GACV,OACE,qBAAKxE,UAAU,kBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBAAKrD,UAAU,iBAAf,SACE,cAACsD,EAAA,EAAD,CAAOC,IAAKiB,EAAIhB,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAEtD,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKpD,OAAN,UAAcyE,EAAIZ,QAClB,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMA,UAAU,OAAhB,UACE,wCACCwE,EAAIV,WAGT,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAasE,EAAIhF,IAAzB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAf4B0D,EAAIhF,e,OCiC3CiF,MA5Gf,WACE,IAAQ7F,EAAeV,IAAfU,WACR,EAAgCL,mBAAS,IAAzC,mBAAOmG,EAAP,KAAiBC,EAAjB,KAEA,EAAkCpG,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KAqBA,OAnBA5B,qBAAU,WACR,IAAM6B,EAAO,GAEbf,EAAGgB,WAAW,SACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBN,EAAKO,KAAL,2BACKD,EAAIE,QADT,IAEEpD,GAAIkD,EAAIlD,GACRqD,SAAUH,EAAIE,OAAOC,YAEvB,IAAMC,EAAeV,EAAKvC,QAAO,SAACkD,GAAD,MAAsB,cAAfA,EAAEF,YAC1C8B,EAAY7B,MAEdX,GAAa,QAEhB,IAGD,8BACGvD,EACC,qBACEmC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,sBAFZ,SAIE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BwC,EAASzB,KAAI,SAAC2B,GACb,OACE,qBAAK5E,UAAU,wBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBACEtC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,iBAFZ,SAIE,cAACsD,EAAA,EAAD,CAAOC,IAAKqB,EAAGpB,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAErD,eAACP,EAAA,EAAKQ,QAAN,CAAc5C,MAAO,CAAEiC,gBAAiB,SAAxC,UACE,cAACG,EAAA,EAAKpD,OAAN,CACEgB,MAAO,CAAEiC,gBAAiB,QAASlC,MAAO,SAD5C,SAGG8D,EAAGhB,QAEN,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACE,sBAAMe,MAAO,CAAED,MAAO,SAAtB,kBACC8D,EAAGd,WAGR,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAa0E,EAAGpF,IAAxB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAtBkC8D,EAAGpF,YAmCvD,qBAAKQ,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1BwC,EAASzB,KAAI,SAAC2B,GACb,OACE,qBAAK5E,UAAU,kBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBAAKrD,UAAU,iBAAf,SACE,cAACsD,EAAA,EAAD,CAAOC,IAAKqB,EAAGpB,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAErD,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKpD,OAAN,UAAc6E,EAAGhB,QACjB,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMA,UAAU,OAAhB,UACE,wCACC4E,EAAGd,WAGR,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAa0E,EAAGpF,IAAxB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAf4B8D,EAAGpF,e,OC+B1CqF,MA3Gf,WACE,IAAQjG,EAAeV,IAAfU,WACR,EAAoCL,mBAAS,IAA7C,mBAAOuG,EAAP,KAAmBC,EAAnB,KACA,EAAkCxG,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KAqBA,OAnBA5B,qBAAU,WACR,IAAM6B,EAAO,GAEbf,EAAGgB,WAAW,SACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBN,EAAKO,KAAL,2BACKD,EAAIE,QADT,IAEEpD,GAAIkD,EAAIlD,GACRqD,SAAUH,EAAIE,OAAOC,YAEvB,IAAMC,EAAeV,EAAKvC,QAAO,SAACkD,GAAD,MAAsB,gBAAfA,EAAEF,YAC1CkC,EAAcjC,MAEhBX,GAAa,QAEhB,IAGD,8BACGvD,EACC,qBACEmC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,sBAFZ,SAIE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1B4C,EAAW7B,KAAI,SAAC+B,GACf,OACE,qBAAKhF,UAAU,wBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBACEtC,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,iBAFZ,SAIE,cAACsD,EAAA,EAAD,CAAOC,IAAKyB,EAAGxB,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAErD,eAACP,EAAA,EAAKQ,QAAN,CAAc5C,MAAO,CAAEiC,gBAAiB,SAAxC,UACE,cAACG,EAAA,EAAKpD,OAAN,CACEgB,MAAO,CAAEiC,gBAAiB,QAASlC,MAAO,SAD5C,SAGGkE,EAAGpB,QAEN,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACE,sBAAMe,MAAO,CAAED,MAAO,SAAtB,kBACCkE,EAAGlB,WAGR,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAa8E,EAAGxF,IAAxB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAtBkCkE,EAAGxF,YAmCvD,qBAAKQ,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACGkC,EAAY,cAAC,EAAD,IAAc,KAC1B4C,EAAW7B,KAAI,SAAC+B,GACf,OACE,qBAAKhF,UAAU,kBAAf,SACE,eAACmD,EAAA,EAAD,CAAMpC,MAAO,CAAEqC,OAAQ,IAAKC,MAAO,KAAnC,UACE,qBAAKrD,UAAU,iBAAf,SACE,cAACsD,EAAA,EAAD,CAAOC,IAAKyB,EAAGxB,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,MAErD,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKpD,OAAN,UAAciF,EAAGpB,QACjB,cAACT,EAAA,EAAKU,KAAN,CAAW7D,UAAU,OAArB,SACE,uBAAMA,UAAU,OAAhB,UACE,wCACCgF,EAAGlB,WAGR,cAACX,EAAA,EAAKQ,QAAN,UACE,cAAC,IAAD,CAAMzD,GAAE,kBAAa8E,EAAGxF,IAAxB,SACE,cAACoB,EAAA,EAAD,CAAQF,KAAK,SAASI,MAAM,QAA5B,gCAf4BkE,EAAGxF,e,cCL1CyF,MAvEf,YAAsC,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,IAAKjG,EAAQ,EAARA,KAC3B,EAA8BX,mBAAS6G,SAASF,IAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KACMhF,EAAYnC,qBAAWH,GACrBY,EAAeV,IAAfU,WAEF2G,EAAQ,SAACF,GACb/E,EAAUrB,QAAQ,CAAEC,OAAMQ,SAAU2F,KAGhCG,EAAY,WAChBF,EAAWD,EAAU,IAGjBI,EAAc,WAClBH,EAAWD,EAAU,IAGvB,OACE,8BACGzG,EACC,8BACE,sBAAKmC,MAAO,CAAEiC,gBAAiB,SAAWhD,UAAU,iBAApD,UACE,cAACY,EAAA,EAAD,CAAQE,MAAM,QAAQ4E,SAAUL,GAAW,EAAGM,QAASF,EAAvD,eAGA,uBAAM1E,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACG,IACAqF,EAAS,OAEZ,cAACzE,EAAA,EAAD,CAAQE,MAAM,QAAQ6E,QAASH,EAAWE,SAAUL,GAAWF,EAA/D,eAIA,cAAC,IAAD,CAAMjF,GAAG,QAAT,SACE,cAACU,EAAA,EAAD,CACEF,KAAK,SACLI,MAAM,QACN6E,QAAS,kBAAMJ,EAAMF,IAHvB,gCAWN,8BACE,sBAAKrF,UAAU,iBAAf,UACE,cAACY,EAAA,EAAD,CAAQE,MAAM,QAAQ4E,SAAUL,GAAW,EAAGM,QAASF,EAAvD,eAGA,uBAAMzF,UAAU,OAAhB,cAAyBqF,EAAzB,OACA,cAACzE,EAAA,EAAD,CAAQE,MAAM,QAAQ6E,QAASH,EAAWE,SAAUL,GAAWF,EAA/D,eAIA,cAAC,IAAD,CAAMjF,GAAG,QAAT,SACE,cAACU,EAAA,EAAD,CACEF,KAAK,SACLI,MAAM,QACN6E,QAAS,kBAAMJ,EAAMF,IAHvB,mCC+CCO,MAtGf,YAAgC,IAC1BhG,EADyB,EAATiG,MACDC,OAAOtG,GAElBZ,EAAeV,IAAfU,WACR,EAA0BL,mBAAS,IAAnC,mBAAOwH,EAAP,KAAcC,EAAd,KACA,EAAkCzH,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KAiBA,OAfA5B,qBAAU,WACR,IAAM6B,EAAO,GAEbf,EAAGgB,WAAW,SACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBN,EAAKO,KAAL,2BAAeD,EAAIE,QAAnB,IAA2BpD,GAAIkD,EAAIlD,MACnC,IAAMsD,EAAeV,EAAKvC,QAAO,SAACkD,GAAD,OAAOA,EAAEvD,KAAOI,KACjDoG,EAASlD,MAEXX,GAAa,QAEhB,CAACvC,IAGF,8BACGhB,EACC,gCACGsD,EAAY,cAAC,EAAD,IAAc,KAC1B6D,EAAM9C,KAAI,SAAC/D,GACV,OACE,qBAEE6B,MAAO,CACLiC,gBAAiB,QACjBI,OAAQ,UAJZ,SAOE,qBAAKpD,UAAU,+BAAf,SACE,eAACmD,EAAA,EAAD,CACEpC,MAAO,CACLsC,MAAO,IACP4C,UAAW,mCAHf,UAMG,IACD,cAAC3C,EAAA,EAAD,CAAOC,IAAKrE,EAAKsE,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,IACrD,eAACP,EAAA,EAAKQ,QAAN,CAAc5C,MAAO,CAAEiC,gBAAiB,SAAxC,UACE,cAACG,EAAA,EAAKpD,OAAN,CAAagB,MAAO,CAAED,MAAO,SAA7B,SACG5B,EAAK0E,QAER,cAACT,EAAA,EAAK+C,YAAN,CAAkBnF,MAAO,CAAED,MAAO,SAAlC,SACG5B,EAAKiH,cAER,cAAChD,EAAA,EAAKU,KAAN,CAAW7D,UAAU,kBAArB,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,OAA3C,UACE,sBAAMe,MAAO,CAAED,MAAO,SAAtB,kBACC5B,EAAK4E,cAIZ,cAAC,EAAD,CAASoB,IAAK,EAAGC,IAAK,EAAGjG,KAAMA,UA7B9BA,EAAKM,UAqClB,gCACG0C,EAAY,cAAC,EAAD,IAAc,KAC1B6D,EAAM9C,KAAI,SAAC/D,GACV,OACE,qBAAKc,UAAU,0BAAf,SACE,qBAAKA,UAAU,cAAf,SACE,eAACmD,EAAA,EAAD,CACEpC,MAAO,CACLsC,MAAO,IACP4C,UAAW,iCAHf,UAME,cAAC3C,EAAA,EAAD,CAAOC,IAAKrE,EAAKsE,MAAO9C,KAAK,QAAQ+C,SAAO,EAACC,UAAQ,IACrD,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKpD,OAAN,UAAcb,EAAK0E,QACnB,cAACT,EAAA,EAAK+C,YAAN,UAAmBhH,EAAKiH,cACxB,cAAChD,EAAA,EAAKU,KAAN,CAAW7D,UAAU,kBAArB,SACE,uBAAMA,UAAU,OAAhB,UACE,wCACCd,EAAK4E,cAIZ,cAAC,EAAD,CAASoB,IAAK,EAAGC,IAAK,EAAGjG,KAAMA,UAnBSA,EAAKM,a,cC5DlD4G,MAdf,WACE,OACE,qBAAKpG,UAAU,eAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAACU,EAAA,EAAD,CAAQF,KAAK,MAAMI,MAAM,QAAQC,MAAO,CAAEC,UAAW,OAArD,mD,sDCuGKqF,EA5GE,WACf,MAA6BnI,IAArBM,EAAR,EAAQA,KAAMI,EAAd,EAAcA,WACR0H,EAAe,CACnBC,UAAW,GACXC,SAAU,GACVC,MAAO,IAGT,EAA4BlI,mBAAS+H,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA0BpI,mBAAS,IAAnC,mBAAOqI,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACV3F,EAAGgB,WAAW,WAAWK,MAAMuE,IAAIF,GADzB,OAGhBvI,EAAKiE,SAAQ,SAACyE,GACZC,MAAM,6CAA+CD,EAAIhI,KAAKM,IAC9D4H,QAAQC,IAAI,2BAA4BH,EAAIhI,KAAKM,OALnC,2CAAH,sDAST8H,EAAiB,SAACC,GACtB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAM1I,EAAd,EAAcA,MACd4H,EAAU,2BAAKD,GAAN,kBAAee,EAAO1I,KAC/B8H,EAAS,CAAEH,SAAQgB,QAASlJ,KAGxBmJ,EAAiB,SAACJ,GACtBT,EAAU,CAAEF,UACZD,EAAU,eAAKL,KAGjB,OACE,8BACG1H,EACC,eAACgJ,EAAA,EAAD,CAAMC,SAAUF,EAAhB,UACE,eAACC,EAAA,EAAKE,MAAN,WACE,uBAAO/G,MAAO,CAAED,MAAO,SAAvB,wBACA,uBACEiH,YAAY,aACZN,KAAK,YACLjH,SAAU8G,EACVvI,MAAO2H,EAAOH,eAGlB,eAACqB,EAAA,EAAKE,MAAN,WACE,uBAAO/G,MAAO,CAAED,MAAO,SAAvB,uBACA,uBACEiH,YAAY,YACZN,KAAK,WACLjH,SAAU8G,EACVvI,MAAO2H,EAAOF,cAIlB,cAACoB,EAAA,EAAKE,MAAN,CACEtI,GAAG,iCACHwI,QAASC,IACTC,MAAM,QACNH,YAAY,sBACZN,KAAK,QACLjH,SAAU8G,EACVvI,MAAO2H,EAAOD,QAGhB,cAAC7F,EAAA,EAAD,CAAQuH,KAAK,SAASzH,KAAK,SAASI,MAAM,QAA1C,uBAKF,eAAC8G,EAAA,EAAD,CAAMC,SAAUF,EAAhB,UACE,eAACC,EAAA,EAAKE,MAAN,WACE,+CACA,uBACEC,YAAY,aACZN,KAAK,YACLjH,SAAU8G,EACVvI,MAAO2H,EAAOH,eAGlB,eAACqB,EAAA,EAAKE,MAAN,WACE,8CACA,uBACEC,YAAY,YACZN,KAAK,WACLjH,SAAU8G,EACVvI,MAAO2H,EAAOF,cAIlB,cAACoB,EAAA,EAAKE,MAAN,CACEtI,GAAG,iCACHwI,QAASC,IACTC,MAAM,QACNH,YAAY,sBACZN,KAAK,QACLjH,SAAU8G,EACVvI,MAAO2H,EAAOD,QAGhB,cAAC7F,EAAA,EAAD,CAAQuH,KAAK,SAASzH,KAAK,SAASI,MAAM,QAA1C,0BC6CKsH,EA7IF,WACX,MAAoDlK,IAA5CM,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,WAAYG,EAA1B,EAA0BA,UAAWlB,EAArC,EAAqCA,WACjCyJ,EAAQ,EAEZ,OACE,8BACGzJ,EACC,sBAAKmC,MAAO,CAAEqC,OAAQ,QAASJ,gBAAiB,SAAhD,UACE,gCACE,qBAAKhD,UAAU,wCAAf,SACE,oBAAIA,UAAU,YAAd,oBAEF,cAACY,EAAA,EAAD,CACEF,KAAK,SACLI,MAAM,QACNC,MAAO,CACLC,UAAW,OAEb2E,QAAS7F,EANX,wBAUiB,IAAhBtB,EAAKY,QAAgB,cAAC,EAAD,OAGxB,sBAAK2B,MAAO,CAAEiC,gBAAiB,SAAWhD,UAAU,aAApD,UACE,8BACGxB,EAAKyE,KAAI,SAAC/D,GACT,OACE,qBAEE6B,MAAO,CAAEiC,gBAAiB,SAC1BhD,UAAU,wBAHZ,SAKE,sBAAKA,UAAU,kBAAf,UACE,qBAAKuD,IAAKrE,EAAKA,KAAKsE,MAAO8E,IAAI,KAC/B,qBAAKtI,UAAU,oBAAf,SAAoCd,EAAKA,KAAK0E,QAC9C,sBAAK5D,UAAU,oBAAf,eACKd,EAAKQ,SAAU,OAEpB,sBAAKM,UAAU,oBAAf,wBACcd,EAAKQ,SAAWR,EAAKA,KAAK4E,SAExC,qBAAK9D,UAAU,kBAAf,SACE,wBACEe,MAAO,CAAEwH,OAAQ,WACjB5C,QAAS,kBACPhG,EAAWT,EAAKA,KAAKM,GAAIN,EAAKQ,WAHlC,SAME,cAAC,IAAD,CAAiBS,KAAMqI,cApBxBtJ,EAAKM,SA4BlB,8BAAsB,IAAhBhB,EAAKY,QAAgB,cAAC,EAAD,SAE7B,qBAAK2B,MAAO,CAAEiC,gBAAiB,SAAWhD,UAAU,cAApD,SACmB,IAAhBxB,EAAKY,QACJ,qBAAKY,UAAU,eAAf,SACE,uBAAMe,MAAO,CAAED,MAAO,SAAWd,UAAU,oBAA3C,UACGxB,EAAKiE,SAAQ,SAAClD,GACb8I,EAAQ9I,EAAIL,KAAK4E,MAAQvE,EAAIG,SAAW2I,KAF5C,cAIcA,EAAMI,QAAQ,aAOpC,gCACE,sBAAKzI,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,oBAAIA,UAAU,YAAd,oBAEF,cAACY,EAAA,EAAD,CACEF,KAAK,SACLI,MAAM,QACNC,MAAO,CACLC,UAAW,OAEb2E,QAAS7F,EANX,wBAUiB,IAAhBtB,EAAKY,QAAgB,cAAC,EAAD,OAGxB,sBAAKY,UAAU,aAAf,UACE,8BACGxB,EAAKyE,KAAI,SAAC/D,GACT,OACE,qBAAKc,UAAU,iBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKuD,IAAKrE,EAAKA,KAAKsE,MAAO8E,IAAI,KAC/B,qBAAKtI,UAAU,cAAf,SAA8Bd,EAAKA,KAAK0E,QACxC,sBAAK5D,UAAU,cAAf,eAAgCd,EAAKQ,SAArC,OACA,sBAAKM,UAAU,cAAf,wBACcd,EAAKQ,SAAWR,EAAKA,KAAK4E,SAExC,qBAAK9D,UAAU,kBAAf,SACE,wBACEe,MAAO,CAAEwH,OAAQ,WACjB5C,QAAS,kBACPhG,EAAWT,EAAKA,KAAKM,GAAIN,EAAKQ,WAHlC,SAME,cAAC,IAAD,CAAiBS,KAAMqI,cAfMtJ,EAAKM,SAuBhD,8BACE,8BAAsB,IAAhBhB,EAAKY,QAAgB,cAAC,EAAD,WAG/B,qBAAKY,UAAU,cAAf,SACmB,IAAhBxB,EAAKY,QACJ,qBAAKY,UAAU,eAAf,SACE,iCACGxB,EAAKiE,SAAQ,SAAClD,GACb8I,EAAQ9I,EAAIL,KAAK4E,MAAQvE,EAAIG,SAAW2I,KAF5C,cAIcA,EAAMI,QAAQ,gB,eCjG7BC,MAtBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW1E,IACjC,cAAC,IAAD,CAAOwE,KAAK,eAAeE,UAAW9G,IACtC,cAAC,IAAD,CAAO4G,KAAK,YAAYE,UAAWzE,IACnC,cAAC,IAAD,CAAOuE,KAAK,YAAYE,UAAWpE,IACnC,cAAC,IAAD,CAAOkE,KAAK,cAAcE,UAAWhE,IACrC,cAAC,IAAD,CAAO8D,KAAK,cAAcE,UAAWjD,IACrC,cAAC,IAAD,CAAO+C,KAAK,QAAQE,UAAWT,e,OC1B3CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ec9146e.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\nexport const CartProvider = ({ children, defaultCart = [] }) => {\r\n  const [cart, setCart] = useState(defaultCart);\r\n  const [cantItems, setcantItems] = useState(0);\r\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\r\n\r\n  function addItem(item, qnt) {\r\n    if (cart.length !== 0) {\r\n      let aux = cart.findIndex((obj) => {\r\n        return obj.item.id === item.item.id;\r\n      });\r\n      if (aux !== -1) {\r\n        const newCart = cart;\r\n        newCart[aux].cantidad = newCart[aux].cantidad + item.cantidad;\r\n      } else setCart([...cart, item]);\r\n    } else setCart([...cart, item]);\r\n    setcantItems(item.cantidad + cantItems);\r\n  }\r\n\r\n  function removeItem(itemID, qnt) {\r\n    setCart(cart.filter((obj) => obj.item.id !== itemID));\r\n    setcantItems(cantItems - qnt);\r\n  }\r\n\r\n  function clearCart() {\r\n    setCart(defaultCart);\r\n    setcantItems(0);\r\n  }\r\n\r\n  function changeState(isDarkMode) {\r\n    setIsDarkMode(isDarkMode);\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        cantItems,\r\n        isDarkMode,\r\n        changeState,\r\n        addItem,\r\n        removeItem,\r\n        clearCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header__container\">\r\n      <h1>E-Commerce</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./icon.css\";\r\nimport { useCartContext } from \"../../CartContex\";\r\n\r\nfunction Icon() {\r\n  const { cantItems } = useCartContext();\r\n\r\n  return (\r\n    <div className=\"Icon__Cont\">\r\n      <Link className=\"Icon__Styles\" to=\"/cart\">\r\n        <FontAwesomeIcon icon={faShoppingCart} />\r\n      </Link>\r\n      <div className=\"Amount__container\">\r\n        <span> {cantItems}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Icon;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport { CartContext } from \"../../CartContex\";\r\n\r\nfunction DarkMode() {\r\n  const myContext = useContext(CartContext);\r\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\r\n  const Change = () => {\r\n    myContext.changeState(isDarkMode);\r\n  };\r\n  useEffect(() => {\r\n    Change();\r\n  });\r\n\r\n  return (\r\n    <DarkModeToggle onChange={setIsDarkMode} checked={isDarkMode} size={80} />\r\n  );\r\n}\r\n\r\nexport default DarkMode;\r\n","import \"./Nav.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport Icon from \"../icon/icon\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport DarkMode from \"../DarkMode/DarkMode\";\r\n\r\nfunction Nav() {\r\n  const { cantItems } = useCartContext();\r\n  return (\r\n    <div className=\"Nav__container\">\r\n      <Link to=\"/\">\r\n        <Button\r\n          size=\"Medium\"\r\n          inverted\r\n          color=\"white\"\r\n          style={{ marginTop: \"5px\" }}\r\n        >\r\n          Home\r\n        </Button>\r\n      </Link>\r\n      <div className=\"DarkMode__Style\">\r\n        <DarkMode />\r\n      </div>\r\n      <ul>\r\n        <li></li>\r\n        <li>\r\n          <Link className=\"Link__Style\" to=\"/electronics\">\r\n            Electronic\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className=\"Link__Style\" to=\"/jewelery\">\r\n            Jewelery\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className=\"Link__Style\" to=\"/MenCloth\">\r\n            Men-Cloth\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className=\"Link__Style\" to=\"/womencloth\">\r\n            Women-Cloth\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      {cantItems !== 0 ? <Icon /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <Dimmer active>\r\n        <Loader>Loading</Loader>\r\n      </Dimmer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDly5mM4d2X8MgQz3hZO7CdR4xhqQrY844\",\r\n  authDomain: \"ecommercecoderreact.firebaseapp.com\",\r\n  projectId: \"ecommercecoderreact\",\r\n  storageBucket: \"ecommercecoderreact.appspot.com\",\r\n  messagingSenderId: \"981548252670\",\r\n  appId: \"1:981548252670:web:48725b5e14199d22e714af\",\r\n};\r\n// Initialize Firebase\r\n//firebase.initializeApp(firebaseConfig);\r\n\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = fb.firestore();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Electronics.css\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nfunction Electronics() {\r\n  const { isDarkMode } = useCartContext();\r\n  const [electro, setElectro] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const docs = [];\r\n\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            category: doc.data().category,\r\n          });\r\n          const filteredItem = docs.filter((x) => x.category === \"Electronic\");\r\n          setElectro(filteredItem);\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div\r\n          style={{ backgroundColor: \"black\" }}\r\n          className=\"itemList__container\"\r\n        >\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {electro.map((el) => {\r\n              return (\r\n                <div className=\"Item__container__Dark\" key={el.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div\r\n                      style={{ backgroundColor: \"black\" }}\r\n                      className=\"Container__img\"\r\n                    >\r\n                      <Image src={el.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content style={{ backgroundColor: \"black\" }}>\r\n                      <Card.Header\r\n                        style={{ backgroundColor: \"black\", color: \"white\" }}\r\n                      >\r\n                        {el.title}\r\n                      </Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span style={{ color: \"white\" }} className=\"date\">\r\n                          <span style={{ color: \"white\" }}>us$ </span>\r\n                          {el.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${el.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"itemList__container\">\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {electro.map((el) => {\r\n              return (\r\n                <div className=\"Item__container\" key={el.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div className=\"Container__img\">\r\n                      <Image src={el.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content>\r\n                      <Card.Header>{el.title}</Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span className=\"date\">\r\n                          <span>us$ </span>\r\n                          {el.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${el.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Electronics;\r\n","import React from \"react\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport \"./Item.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCartContext } from \"../../CartContex\";\r\n\r\nfunction Item({ item }) {\r\n  const { isDarkMode } = useCartContext();\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div className=\"Item__container__Dark\">\r\n          <Card style={{ height: 450, width: 350 }}>\r\n            <div\r\n              style={{ backgroundColor: \"black\" }}\r\n              className=\"Container__img\"\r\n            >\r\n              <Image src={item.image} size=\"small\" wrapped centered />\r\n            </div>\r\n            <Card.Content style={{ backgroundColor: \"black\" }}>\r\n              <Card.Header style={{ backgroundColor: \"black\", color: \"white\" }}>\r\n                {item.title}\r\n              </Card.Header>\r\n              <Card.Meta className=\"date\">\r\n                <span style={{ color: \"white\" }} className=\"date\">\r\n                  <span style={{ color: \"white\" }}>us$ </span>\r\n                  {item.price}\r\n                </span>\r\n              </Card.Meta>\r\n              <Card.Content>\r\n                <Link to={`/detail/${item.id}`}>\r\n                  <Button size=\"medium\" color=\"black\">\r\n                    Details\r\n                  </Button>\r\n                </Link>\r\n              </Card.Content>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <div className=\"Item__container\">\r\n          <Card style={{ height: 450, width: 350 }}>\r\n            <div className=\"Container__img\">\r\n              <Image src={item.image} size=\"small\" wrapped centered />\r\n            </div>\r\n            <Card.Content>\r\n              <Card.Header>{item.title}</Card.Header>\r\n              <Card.Meta className=\"date\">\r\n                <span className=\"date\">\r\n                  <span>us$ </span>\r\n                  {item.price}\r\n                </span>\r\n              </Card.Meta>\r\n              <Card.Content>\r\n                <Link to={`/detail/${item.id}`}>\r\n                  <Button size=\"medium\" color=\"black\">\r\n                    Details\r\n                  </Button>\r\n                </Link>\r\n              </Card.Content>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ItemList.css\";\r\nimport Item from \"../Item/Item\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nfunction ItemList() {\r\n  const [item, setItem] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const docs = [];\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setItem(docs);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"itemList__container\">\r\n      <div className=\"itemlist__grid\">\r\n        {isLoading ? <Spinner /> : null}\r\n        {item.map((it) => {\r\n          return <Item item={it} key={it.id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","import React from \"react\";\r\nimport ItemList from \"../../components/ItemList/ItemList\";\r\nimport { useCartContext } from \"../../CartContex\";\r\n\r\nfunction Home() {\r\n  const { isDarkMode } = useCartContext();\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div style={{ backgroundColor: \"black\" }}>\r\n          <ItemList />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ItemList />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Jewelery.css\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nfunction Jewelery() {\r\n  const { isDarkMode } = useCartContext();\r\n  const [jewel, setJewel] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const docs = [];\r\n\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            category: doc.data().category,\r\n          });\r\n          const filteredItem = docs.filter((x) => x.category === \"Jewelery\");\r\n          setJewel(filteredItem);\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div\r\n          style={{ backgroundColor: \"black\" }}\r\n          className=\"itemList__container\"\r\n        >\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {jewel.map((jel) => {\r\n              return (\r\n                <div className=\"Item__container__Dark\" key={jel.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div\r\n                      style={{ backgroundColor: \"black\" }}\r\n                      className=\"Container__img\"\r\n                    >\r\n                      <Image src={jel.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content style={{ backgroundColor: \"black\" }}>\r\n                      <Card.Header\r\n                        style={{ backgroundColor: \"black\", color: \"white\" }}\r\n                      >\r\n                        {jel.title}\r\n                      </Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span style={{ color: \"white\" }} className=\"date\">\r\n                          <span style={{ color: \"white\" }}>us$ </span>\r\n                          {jel.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${jel.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"itemList__container\">\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {jewel.map((jew) => {\r\n              return (\r\n                <div className=\"Item__container\" key={jew.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div className=\"Container__img\">\r\n                      <Image src={jew.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content>\r\n                      <Card.Header>{jew.title}</Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span className=\"date\">\r\n                          <span>us$ </span>\r\n                          {jew.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${jew.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jewelery;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./MenCloth.css\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nfunction MenCloth() {\r\n  const { isDarkMode } = useCartContext();\r\n  const [mencloth, setMencloth] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const docs = [];\r\n\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            category: doc.data().category,\r\n          });\r\n          const filteredItem = docs.filter((x) => x.category === \"Men-Cloth\");\r\n          setMencloth(filteredItem);\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div\r\n          style={{ backgroundColor: \"black\" }}\r\n          className=\"itemList__container\"\r\n        >\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {mencloth.map((mc) => {\r\n              return (\r\n                <div className=\"Item__container__Dark\" key={mc.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div\r\n                      style={{ backgroundColor: \"black\" }}\r\n                      className=\"Container__img\"\r\n                    >\r\n                      <Image src={mc.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content style={{ backgroundColor: \"black\" }}>\r\n                      <Card.Header\r\n                        style={{ backgroundColor: \"black\", color: \"white\" }}\r\n                      >\r\n                        {mc.title}\r\n                      </Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span style={{ color: \"white\" }} className=\"date\">\r\n                          <span style={{ color: \"white\" }}>us$ </span>\r\n                          {mc.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${mc.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"itemList__container\">\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {mencloth.map((mc) => {\r\n              return (\r\n                <div className=\"Item__container\" key={mc.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div className=\"Container__img\">\r\n                      <Image src={mc.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content>\r\n                      <Card.Header>{mc.title}</Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span className=\"date\">\r\n                          <span>us$ </span>\r\n                          {mc.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${mc.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenCloth;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./WomenCloth.css\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nfunction WomenCloth() {\r\n  const { isDarkMode } = useCartContext();\r\n  const [womencloth, setWomencloth] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const docs = [];\r\n\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            category: doc.data().category,\r\n          });\r\n          const filteredItem = docs.filter((x) => x.category === \"Women-Cloth\");\r\n          setWomencloth(filteredItem);\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div\r\n          style={{ backgroundColor: \"black\" }}\r\n          className=\"itemList__container\"\r\n        >\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {womencloth.map((wc) => {\r\n              return (\r\n                <div className=\"Item__container__Dark\" key={wc.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div\r\n                      style={{ backgroundColor: \"black\" }}\r\n                      className=\"Container__img\"\r\n                    >\r\n                      <Image src={wc.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content style={{ backgroundColor: \"black\" }}>\r\n                      <Card.Header\r\n                        style={{ backgroundColor: \"black\", color: \"white\" }}\r\n                      >\r\n                        {wc.title}\r\n                      </Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span style={{ color: \"white\" }} className=\"date\">\r\n                          <span style={{ color: \"white\" }}>us$ </span>\r\n                          {wc.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${wc.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"itemList__container\">\r\n          <div className=\"itemlist__grid\">\r\n            {isLoading ? <Spinner /> : null}\r\n            {womencloth.map((wc) => {\r\n              return (\r\n                <div className=\"Item__container\" key={wc.id}>\r\n                  <Card style={{ height: 450, width: 350 }}>\r\n                    <div className=\"Container__img\">\r\n                      <Image src={wc.image} size=\"small\" wrapped centered />\r\n                    </div>\r\n                    <Card.Content>\r\n                      <Card.Header>{wc.title}</Card.Header>\r\n                      <Card.Meta className=\"date\">\r\n                        <span className=\"date\">\r\n                          <span>us$ </span>\r\n                          {wc.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                      <Card.Content>\r\n                        <Link to={`/detail/${wc.id}`}>\r\n                          <Button size=\"Medium\" color=\"black\">\r\n                            Details\r\n                          </Button>\r\n                        </Link>\r\n                      </Card.Content>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WomenCloth;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"./Counter.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../CartContex\";\r\nimport { useCartContext } from \"../../CartContex\";\r\n\r\nfunction Counter({ min, max, item }) {\r\n  const [counter, setCounter] = useState(parseInt(min));\r\n  const myContext = useContext(CartContext);\r\n  const { isDarkMode } = useCartContext();\r\n\r\n  const onAdd = (counter) => {\r\n    myContext.addItem({ item, cantidad: counter });\r\n  };\r\n\r\n  const counterUp = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const counterDown = () => {\r\n    setCounter(counter - 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div>\r\n          <div style={{ backgroundColor: \"black\" }} className=\"SectionCounter\">\r\n            <Button color=\"white\" disabled={counter <= 1} onClick={counterDown}>\r\n              -\r\n            </Button>\r\n            <span style={{ color: \"white\" }} className=\"span\">\r\n              {\" \"}\r\n              {counter}{\" \"}\r\n            </span>\r\n            <Button color=\"white\" onClick={counterUp} disabled={counter >= max}>\r\n              +\r\n            </Button>\r\n\r\n            <Link to=\"/cart\">\r\n              <Button\r\n                size=\"Medium\"\r\n                color=\"white\"\r\n                onClick={() => onAdd(counter)}\r\n              >\r\n                Add to Cart\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"SectionCounter\">\r\n            <Button color=\"black\" disabled={counter <= 1} onClick={counterDown}>\r\n              -\r\n            </Button>\r\n            <span className=\"span\"> {counter} </span>\r\n            <Button color=\"black\" onClick={counterUp} disabled={counter >= max}>\r\n              +\r\n            </Button>\r\n\r\n            <Link to=\"/cart\">\r\n              <Button\r\n                size=\"Medium\"\r\n                color=\"black\"\r\n                onClick={() => onAdd(counter)}\r\n              >\r\n                Add to Cart\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport \"./ItemDetail.css\";\r\nimport Counter from \"../../components/Counter/Counter\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nfunction ItemDetail({ match }) {\r\n  let itemID = match.params.id;\r\n\r\n  const { isDarkMode } = useCartContext();\r\n  const [items, setItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const docs = [];\r\n\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n          const filteredItem = docs.filter((x) => x.id === itemID);\r\n          setItems(filteredItem);\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  }, [itemID]);\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div>\r\n          {isLoading ? <Spinner /> : null}\r\n          {items.map((item) => {\r\n            return (\r\n              <div\r\n                key={item.id}\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  height: \"1200px\",\r\n                }}\r\n              >\r\n                <div className=\"Item__container__DarkDetail \">\r\n                  <Card\r\n                    style={{\r\n                      width: 400,\r\n                      boxShadow: \"0 5px 40px rgba(158, 0, 0, 0.5)\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <Image src={item.image} size=\"small\" wrapped centered />\r\n                    <Card.Content style={{ backgroundColor: \"black\" }}>\r\n                      <Card.Header style={{ color: \"white\" }}>\r\n                        {item.title}\r\n                      </Card.Header>\r\n                      <Card.Description style={{ color: \"white\" }}>\r\n                        {item.description}\r\n                      </Card.Description>\r\n                      <Card.Meta className=\"container__Date\">\r\n                        <span style={{ color: \"white\" }} className=\"date\">\r\n                          <span style={{ color: \"white\" }}>us$ </span>\r\n                          {item.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                    </Card.Content>\r\n                    <Counter min={1} max={5} item={item} />\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {isLoading ? <Spinner /> : null}\r\n          {items.map((item) => {\r\n            return (\r\n              <div className=\"Item__container__detail\" key={item.id}>\r\n                <div className=\"card__style\">\r\n                  <Card\r\n                    style={{\r\n                      width: 400,\r\n                      boxShadow: \"0 5px 40px rgba(0, 0, 0, 0.5)\",\r\n                    }}\r\n                  >\r\n                    <Image src={item.image} size=\"small\" wrapped centered />\r\n                    <Card.Content>\r\n                      <Card.Header>{item.title}</Card.Header>\r\n                      <Card.Description>{item.description}</Card.Description>\r\n                      <Card.Meta className=\"container__Date\">\r\n                        <span className=\"date\">\r\n                          <span>us$ </span>\r\n                          {item.price}\r\n                        </span>\r\n                      </Card.Meta>\r\n                    </Card.Content>\r\n                    <Counter min={1} max={5} item={item} />\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n","import React from \"react\";\r\nimport \"./Error.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Error() {\r\n  return (\r\n    <div className=\"Error__style\">\r\n      <div className=\"Button__container\">\r\n        <Link to=\"/\">\r\n          <Button size=\"big\" color=\"black\" style={{ marginTop: \"5px\" }}>\r\n            the cart is empty, go shopping\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Input } from \"semantic-ui-react\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport { db } from \"../../Firebase\";\r\n\r\nconst FormCart = () => {\r\n  const { cart, isDarkMode } = useCartContext();\r\n  const initialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    Email: \"\",\r\n  };\r\n\r\n  const [values, setValues] = useState(initialState);\r\n  const [order, setOrder] = useState([]);\r\n\r\n  const addOrEdit = async (object) => {\r\n    await db.collection(\"ordenes\").doc().set(object);\r\n\r\n    cart.forEach((car) => {\r\n      alert(\"Compra Realizada!, si numero de orden es: \" + car.item.id);\r\n      console.log(\"nuevo producto agregado!\", car.item.id);\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n    setOrder({ values, product: cart });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    addOrEdit({ order });\r\n    setValues({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <Form onSubmit={handleOnSubmit}>\r\n          <Form.Field>\r\n            <label style={{ color: \"white\" }}>First Name</label>\r\n            <input\r\n              placeholder=\"First Name\"\r\n              name=\"firstName\"\r\n              onChange={handleOnChange}\r\n              value={values.firstName}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label style={{ color: \"white\" }}>Last Name</label>\r\n            <input\r\n              placeholder=\"Last Name\"\r\n              name=\"lastName\"\r\n              onChange={handleOnChange}\r\n              value={values.lastName}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field\r\n            id=\"form-input-control-error-email\"\r\n            control={Input}\r\n            label=\"Email\"\r\n            placeholder=\"example@example.com\"\r\n            name=\"Email\"\r\n            onChange={handleOnChange}\r\n            value={values.Email}\r\n          />\r\n\r\n          <Button type=\"submit\" size=\"Medium\" color=\"black\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      ) : (\r\n        <Form onSubmit={handleOnSubmit}>\r\n          <Form.Field>\r\n            <label>First Name</label>\r\n            <input\r\n              placeholder=\"First Name\"\r\n              name=\"firstName\"\r\n              onChange={handleOnChange}\r\n              value={values.firstName}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Last Name</label>\r\n            <input\r\n              placeholder=\"Last Name\"\r\n              name=\"lastName\"\r\n              onChange={handleOnChange}\r\n              value={values.lastName}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field\r\n            id=\"form-input-control-error-email\"\r\n            control={Input}\r\n            label=\"Email\"\r\n            placeholder=\"example@example.com\"\r\n            name=\"Email\"\r\n            onChange={handleOnChange}\r\n            value={values.Email}\r\n          />\r\n\r\n          <Button type=\"submit\" size=\"Medium\" color=\"black\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormCart;\r\n","import \"./Cart.css\";\r\nimport { useCartContext } from \"../../CartContex\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Error from \"../../components/Error/Error\";\r\nimport FormCart from \"../../components/Form/Form\";\r\n\r\nconst Cart = () => {\r\n  const { cart, removeItem, clearCart, isDarkMode } = useCartContext();\r\n  let Total = 0;\r\n\r\n  return (\r\n    <div>\r\n      {isDarkMode ? (\r\n        <div style={{ height: \"800px\", backgroundColor: \"black\" }}>\r\n          <div>\r\n            <div className=\"container__h4 backGround__Img__Black \">\r\n              <h4 className=\"h4__Style\">Cart</h4>\r\n            </div>\r\n            <Button\r\n              size=\"Medium\"\r\n              color=\"black\"\r\n              style={{\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={clearCart}\r\n            >\r\n              Clear Cart\r\n            </Button>\r\n            {cart.length === 0 && <Error />}\r\n          </div>\r\n\r\n          <div style={{ backgroundColor: \"black\" }} className=\"grid__Cart\">\r\n            <div>\r\n              {cart.map((item) => {\r\n                return (\r\n                  <div\r\n                    key={item.id}\r\n                    style={{ backgroundColor: \"black\" }}\r\n                    className=\"Container__all__Black\"\r\n                  >\r\n                    <div className=\"Container__Card\">\r\n                      <img src={item.item.image} alt=\"\" />\r\n                      <div className=\"style__text_black\">{item.item.title}</div>\r\n                      <div className=\"style__text_black\">\r\n                        x {item.cantidad}{\" \"}\r\n                      </div>\r\n                      <div className=\"style__text_black\">\r\n                        total: us$ {item.cantidad * item.item.price}\r\n                      </div>\r\n                      <div className=\"Container__Icon\">\r\n                        <button\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={() =>\r\n                            removeItem(item.item.id, item.cantidad)\r\n                          }\r\n                        >\r\n                          <FontAwesomeIcon icon={faTimesCircle} />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div>{cart.length !== 0 && <FormCart />}</div>\r\n          </div>\r\n          <div style={{ backgroundColor: \"black\" }} className=\"container__\">\r\n            {cart.length !== 0 && (\r\n              <div className=\"Total__Style\">\r\n                <span style={{ color: \"white\" }} className=\"Total_Style_Black\">\r\n                  {cart.forEach((obj) => {\r\n                    Total = obj.item.price * obj.cantidad + Total;\r\n                  })}\r\n                  Total: us$ {Total.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"backGround__Img\">\r\n            <div className=\"container__h4\">\r\n              <h4 className=\"h4__Style\">Cart</h4>\r\n            </div>\r\n            <Button\r\n              size=\"Medium\"\r\n              color=\"black\"\r\n              style={{\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={clearCart}\r\n            >\r\n              Clear Cart\r\n            </Button>\r\n            {cart.length === 0 && <Error />}\r\n          </div>\r\n\r\n          <div className=\"grid__Cart\">\r\n            <div>\r\n              {cart.map((item) => {\r\n                return (\r\n                  <div className=\"Container__all\" key={item.id}>\r\n                    <div className=\"Container__Card\">\r\n                      <img src={item.item.image} alt=\"\" />\r\n                      <div className=\"style__text\">{item.item.title}</div>\r\n                      <div className=\"style__text\">x {item.cantidad} </div>\r\n                      <div className=\"style__text\">\r\n                        total: us$ {item.cantidad * item.item.price}\r\n                      </div>\r\n                      <div className=\"Container__Icon\">\r\n                        <button\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={() =>\r\n                            removeItem(item.item.id, item.cantidad)\r\n                          }\r\n                        >\r\n                          <FontAwesomeIcon icon={faTimesCircle} />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div>\r\n              <div>{cart.length !== 0 && <FormCart />}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container__\">\r\n            {cart.length !== 0 && (\r\n              <div className=\"Total__Style\">\r\n                <span>\r\n                  {cart.forEach((obj) => {\r\n                    Total = obj.item.price * obj.cantidad + Total;\r\n                  })}\r\n                  Total: us$ {Total.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { CartProvider } from \"./CartContex\";\r\n// COMPONENTS\r\nimport Header from \"./components/Header/Header\";\r\nimport Nav from \"./components/Nav/Nav\";\r\n//VIEWS\r\nimport Electronics from \"./views/Electronics/Electronics\";\r\nimport Home from \"./views/Home/Home\";\r\nimport Jewelery from \"./views/Jewelery/Jewelery\";\r\nimport MenCloth from \"./views/MenCloth/MenCloth\";\r\nimport WomenCloth from \"./views/WomenCloth/WomenCloth\";\r\nimport ItemDetail from \"./views/ItemDetail/ItemDetail\";\r\nimport Cart from \"./views/Cart/Cart\";\r\n\r\n// REACT-ROUTER-DOM\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <CartProvider>\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <Nav />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/electronics\" component={Electronics} />\r\n            <Route path=\"/jewelery\" component={Jewelery} />\r\n            <Route path=\"/MenCloth\" component={MenCloth} />\r\n            <Route path=\"/womencloth\" component={WomenCloth} />\r\n            <Route path=\"/detail/:id\" component={ItemDetail} />\r\n            <Route path=\"/Cart\" component={Cart} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./Firebase\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}